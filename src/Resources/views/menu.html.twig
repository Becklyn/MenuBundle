{% extends "@BecklynMenu/root.html.twig" %}

{#-
 #  Renders a list of children of the given item.
 #
 #  @var \Becklyn\Menu\Item\MenuItem item
-#}
{%- block children -%}
    {%- set children = item.visibleChildren -%}

    {%- if children is not empty and (options.depth is null or options.depth > item.level) -%}
        <ul{{ _self.attributes(item.childListAttributes) }}>
            {%- for child in children -%}
                {%- with {item: child} -%}
                    {{- block("listItem") -}}
                {%- endwith -%}
            {%- endfor -%}
        </ul>
    {%- endif -%}
{%- endblock -%}


{#-
 #  Renders the list item of a single item
 #
 #  @var \Becklyn\Menu\Item\MenuItem item
-#}
{%- block listItem -%}
    <li{{ _self.attributes(item.listItemAttributes) }}>
        {{- block("item") -}}
        {{- block("children") -}}
    </li>
{%- endblock -%}


{#-
 #  Renders the content of a single item (link or span basically)
 #
 #  @var \Becklyn\Menu\Item\MenuItem item
-#}
{%- block item -%}
    {%- set attributes = item.listItemAttributes -%}
    {{- item.target is not null ? block("linkElement") : block("spanElement") -}}
{%- endblock -%}


{#-
 #  The content of an item, if it is a link
 #
 #  @var \Becklyn\Menu\Item\MenuItem item
-#}
{%- block linkElement -%}
    <a href="{{ item.target }}"{{ _self.attributes(item.linkAttributes) }}>{{ block("label") }}</a>
{%- endblock -%}


{#-
 #  The content of an item, if it is not a link
 #
 #  @var \Becklyn\Menu\Item\MenuItem item
-#}
{%- block spanElement -%}
    <span{{ _self.attributes(item.linkAttributes) }}>{{ block("label") }}</span>
{%- endblock -%}


{#-
 #  The label (textual content) of an item
 #
 #  @var \Becklyn\Menu\Item\MenuItem item
-#}
{%- block label -%}
    {%- if options.translationDomain is not same as (false) -%}
        {{ item.label | trans([], options.translationDomain) }}
    {%- else -%}
        {{ item.label }}
    {%- endif -%}
{%- endblock -%}


{#-
 #  Renders a list of HTML attributes to a string
 #
 #  @var array attributes
-#}
{%- macro attributes (attributes) -%}
    {%- for name, value in attributes -%}
        {%- if value is not none and value is not same as(false) -%}
            {{- value is same as (true) ? value : (' %s="%s"'|format(name, value|e("html_attr")) | raw) -}}
        {%- endif -%}
    {%- endfor -%}
{%- endmacro -%}
